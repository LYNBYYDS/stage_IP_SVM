entity TOP_tb is
--	Port();
end TOP_tb;

architecture Behavioral of TOP_tb is

component TOP is 
	port(	-- SV
			SV0_dim0 : in std_logic_vector(27 downto 0); 
			SV0_dim1 : in std_logic_vector(27 downto 0); 
			SV0_dim2 : in std_logic_vector(27 downto 0); 
			SV0_dim3 : in std_logic_vector(27 downto 0); 
			SV0_dim4 : in std_logic_vector(27 downto 0); 
			SV0_dim5 : in std_logic_vector(27 downto 0); 
			SV0_dim6 : in std_logic_vector(27 downto 0); 
			SV0_dim7 : in std_logic_vector(27 downto 0); 
			SV1_dim0 : in std_logic_vector(27 downto 0); 
			SV1_dim1 : in std_logic_vector(27 downto 0); 
			SV1_dim2 : in std_logic_vector(27 downto 0); 
			SV1_dim3 : in std_logic_vector(27 downto 0); 
			SV1_dim4 : in std_logic_vector(27 downto 0); 
			SV1_dim5 : in std_logic_vector(27 downto 0); 
			SV1_dim6 : in std_logic_vector(27 downto 0); 
			SV1_dim7 : in std_logic_vector(27 downto 0); 

			-- Test Data
			test_data_dim0 : in std_logic_vector(27 downto 0); 
			test_data_dim1 : in std_logic_vector(27 downto 0); 
			test_data_dim2 : in std_logic_vector(27 downto 0); 
			test_data_dim3 : in std_logic_vector(27 downto 0); 
			test_data_dim4 : in std_logic_vector(27 downto 0); 
			test_data_dim5 : in std_logic_vector(27 downto 0); 
			test_data_dim6 : in std_logic_vector(27 downto 0); 
			test_data_dim7 : in std_logic_vector(27 downto 0); 

			-- alpha * Y
			SV0_alphaY : in std_logic_vector(11 downto 0); 
			SV1_alphaY : in std_logic_vector(11 downto 0); 

			-- gamma
			gamma : in std_logic_vector(11 downto 0); 

			-- b
			b : in std_logic_vector(19 downto 0); 

			-- output
			output : out std_logic 
			);

end component;

signal SV0_dim0 : std_logic_vector(27 downto 0) := "0000000000000000010000000000";
signal SV0_dim1 : std_logic_vector(27 downto 0) := "0000000000000111110100010100";
signal SV0_dim2 : std_logic_vector(27 downto 0) := "0000000011001101010101010010";
signal SV0_dim3 : std_logic_vector(27 downto 0) := "0000000010010010001100010100";
signal SV0_dim4 : std_logic_vector(27 downto 0) := "0000000000110010101100011111";
signal SV0_dim5 : std_logic_vector(27 downto 0) := "1111111111111111110101010010";
signal SV0_dim6 : std_logic_vector(27 downto 0) := "0000000000000000010111001101";
signal SV0_dim7 : std_logic_vector(27 downto 0) := "0000000000001010010000111101";
signal SV1_dim0 : std_logic_vector(27 downto 0) := "0001101000011010110001100110";
signal SV1_dim1 : std_logic_vector(27 downto 0) := "0000000000001100100100101001";
signal SV1_dim2 : std_logic_vector(27 downto 0) := "0000000010000100111000111101";
signal SV1_dim3 : std_logic_vector(27 downto 0) := "0000000010000000010100110011";
signal SV1_dim4 : std_logic_vector(27 downto 0) := "0000000111110001100110111000";
signal SV1_dim5 : std_logic_vector(27 downto 0) := "1111111111111111101111000011";
signal SV1_dim6 : std_logic_vector(27 downto 0) := "0000000000000000100001110001";
signal SV1_dim7 : std_logic_vector(27 downto 0) := "0000000000000010111000001010";

test_data_dim0 : in std_logic_vector(27 downto 0) => (others => '0'); 
test_data_dim1 : in std_logic_vector(27 downto 0) => (others => '0'); 
test_data_dim2 : in std_logic_vector(27 downto 0) => (others => '0'); 

signal SV0_alphaY : std_logic_vector(11 downto 0) := "110101100110";
signal SV1_alphaY : std_logic_vector(11 downto 0) := "110101100110";

signal gamma : std_logic_vector(11 downto 0) := "010110001110";

signal b : std_logic_vector(19 downto 0) := "11111111110101100110";

begin

	TOP_0 : TOP
		port map(	SV0_dim0 => SV0_dim0,
					SV0_dim1 => SV0_dim1,
					SV0_dim2 => SV0_dim2,
					SV0_dim3 => SV0_dim3,
					SV0_dim4 => SV0_dim4,
					SV0_dim5 => SV0_dim5,
					SV0_dim6 => SV0_dim6,
					SV0_dim7 => SV0_dim7,
					SV1_dim0 => SV1_dim0,
					SV1_dim1 => SV1_dim1,
					SV1_dim2 => SV1_dim2,
					SV1_dim3 => SV1_dim3,
					SV1_dim4 => SV1_dim4,
					SV1_dim5 => SV1_dim5,
					SV1_dim6 => SV1_dim6,
					SV1_dim7 => SV1_dim7,
					test_data_dim0 => test_data_dim0, 
					test_data_dim1 => test_data_dim1, 
					test_data_dim2 => test_data_dim2, 
					test_data_dim3 => test_data_dim3, 
					test_data_dim4 => test_data_dim4, 
					test_data_dim5 => test_data_dim5, 
					test_data_dim6 => test_data_dim6, 
					test_data_dim7 => test_data_dim7, 
					SV0_alphaY => SV0_alphaY, 
					SV1_alphaY => SV1_alphaY, 
					gamma => gamma, 
					b => b, 
					output => output 
					);
